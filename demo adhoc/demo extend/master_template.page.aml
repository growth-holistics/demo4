Func getRevenueShareBarChart(dataset) {
  VizBlock {
    label: 'Revenue Delivered by Country Name'
    viz: BarChart {
      dataset: dataset
      x_axis: VizFieldFull {
        ref: ref('ecommerce_countries', 'name')
        format {
          type: 'text'
        }
      }
      y_axis {
        series {
          field {
            ref: ref('order_master', 'revenue_delivered')
            format {
              type: 'number'
              pattern: 'inherited'
            }
          }
        }
      }
      settings {
        row_limit: 5000
      }
    }
  }
}

Func getRevenueSharePieChart(dataset) {
  VizBlock {
    label: 'Revenue Share by Product Category'
    viz: PieChart {
      dataset: dataset
      legend: VizFieldFull {
        ref: ref('map_categories', 'parent_category')
        format {
          type: 'text'
        }
      }
      series {
        field {
          label: 'Revenue delivered'
          ref: ref('order_master', 'revenue_delivered')
        }
        settings {
          point {
            value: 'Clothes'
            color: '#255DD4'
          }
          point {
            value: 'Groceries'
            color: '#18A59E'
          }
          point {
            value: 'Home Entertainment'
            color: '#07326C'
          }
          point {
            value: 'Home Furniture'
            color: '#AF7DED'
          }
          point {
            value: 'Mobiles & Tablets'
            color: '#A50E43'
          }
          point {
            value: 'Skin Care'
            color: '#F2B602'
          }
        }
      }
      settings {
        display_as_donut: true
        show_total: true
        legend_label: 'hidden'
        show_data_label_by: 'percentage'
      }
    }
  }
}

const demo_extend_country_filter = FilterBlock {
    label: 'Country'
    type: 'field'
    source: FieldFilterSource {
      dataset: demo_ecommerce
      field: ref('ecommerce_countries', 'name')
    }
    default {
      operator: 'is'
      value: []
    }
  }

const demo_extend_city_filter = FilterBlock {
    label: 'City'
    type: 'field'
    source: FieldFilterSource {
      dataset: demo_ecommerce
      field: ref('ecommerce_cities', 'name')
    }
    default {
      operator: 'is'
      value: []
    }
  }


Dashboard demo_extend_master {
  title: 'eCommerce Business Metrics'
  view: CanvasLayout {
    label: 'View 1'
    height: 1200
    block t1 {
      position: pos(20, 10, 690, 90)
    }
    block t2 {
      position: pos(20, 170, 1140, 80)
    }
    block t3 {
      position: pos(20, 140, 361, 40)
    }
    block v1 {
      position: pos(500, 200, 700, 500)
    }
    block f1 {
      position: pos(600, 60, 300, 80)
    }
    block f2 {
      position: pos(850, 60, 300, 80)
    }
    block v2 {
      position: pos(150, 180, 300, 200)
    }
    block v3 {
      position: pos(150, 380, 250, 170)
    }
    block v4 {
      position: pos(150, 580, 300, 170)
    }
  }
  block t1: TextBlock {
    content: @md <h1> eCommerce Business Metrics</h1>;;
  }


  block v1: getRevenueSharePieChart(demo_ecommerce)
  
  block v2: VizBlock {
    label: 'Revenue'
    viz: MetricKpi {
      dataset: demo_ecommerce
      value: VizFieldFull {
        ref: ref('order_master', 'revenue')
        format {
          type: 'number'
          pattern: '[$$]#,###0.00,,"M"'
          group_separator: ','
          decimal_separator: '.'
        }
      }
    }
    settings {
      hide_label: true
    }
  }
  block v3: VizBlock {
    label: 'Revenue (dup)'
    viz: MetricKpi {
      dataset: demo_ecommerce
      value: VizFieldFull {
        label: '# of Orders'
        ref: ref('order_master', 'order_count')
        format {
          type: 'number'
          pattern: 'inherited'
        }
      }
    }
    settings {
      hide_label: true
    }
  }

  block v4: VizBlock {
    label: 'AOV'
    viz: MetricKpi {
      dataset: demo_ecommerce
      value: VizFieldFull {
        ref: ref('order_master', 'aov')
        format {
          type: 'number'
          pattern: 'inherited'
        }
      }
    }
    settings {
      hide_label: true
    }
  }

  block f1: demo_extend_country_filter;

  block f2: demo_extend_city_filter;

  settings {
    timezone: 'America/Los_Angeles'
    cache_duration: 1440
  }
  interactions: [
    FilterInteraction {
      from: 'f1'
      to: [
        CustomMapping {
          block: 'f2'
          disabled: true
        }
      ]
    },
    FilterInteraction {
      from: 'f2'
      to: [
        CustomMapping {
          block: 'f1'
          disabled: true
        }
      ]
    }
  ]
}
