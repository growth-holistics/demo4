Dashboard unnamed_2 {
  title: 'Multiple-Value Gauge Chart'
  description: ''''''

  view: CanvasLayout {
    label: 'View 1'
    height: 840
    grid_size: 20
    block v2 {
      position: pos(360, 160, 780, 280)
    }
    block v3 {
      position: pos(360, 20, 780, 120)
    }
    block t1 {
      position: pos(20, 20, 320, 420)
    }
    block t2 {
      position: pos(20, 460, 1160, 360)
    }
  }

  theme: H.themes.classic
  block v2: VizBlock {
    label: 'Multi-Value Gauge Chart'
    viz: CustomChart {
      dataset: demo_ecommerce
      calculation metric_4782fb9 {
        label: 'target'
        formula: @aql order_master.order_count * 0.8;;
        calc_type: 'measure'
        data_type: 'number'
      }
      custom_chart_id: 19733
      field m1: VizFieldFull {
        ref: ref('order_master', 'refunded_orders_count')
        format {
          type: 'number'
          pattern: '#,###'
        }
      }
      field m2: VizFieldFull {
        ref: ref('order_master', 'cancelled_orders_count')
        format {
          type: 'number'
          pattern: '#,###'
        }
      }
      field max: VizFieldFull {
        ref: ref('order_master', 'order_count')
        format {
          type: 'number'
          pattern: '#,###'
        }
      }
      field target: VizFieldFull {
        ref: ref('order_master', 'delivered_orders_count')
        format {
          type: 'number'
          pattern: 'inherited'
        }
      }
      setting m1_color: '#47B881'
      setting m2_color: '#EC4C46'
      setting max_color: '#DEDEDE'
      setting target_color: 'black'
      settings {
        row_limit: 5000
      }
    }
  }
  block v3: VizBlock {
    label: 'Measures'
    viz: DataTable {
      dataset: demo_ecommerce
      fields: [
        VizFieldFull {
          ref: ref('order_master', 'refunded_orders_count')
          format {
            type: 'number'
            pattern: '#,###'
          }
          uname: 'custom_refunded_orders_count'
        },
        VizFieldFull {
          ref: ref('order_master', 'cancelled_orders_count')
          format {
            type: 'number'
            pattern: '#,###'
          }
        },
        VizFieldFull {
          ref: ref('order_master', 'delivered_orders_count')
          format {
            type: 'number'
            pattern: '#,###'
          }
        },
        VizFieldFull {
          ref: ref('order_master', 'order_count')
          format {
            type: 'number'
            pattern: '#,###'
          }
        }
      ]
      settings {
        show_row_number: true
        row_limit: 5000
        column_width {
          manual_widths: [
            ColumnWidth {
              key: 'custom_refunded_orders_count'
              width: 168
            }
          ]
        }
        aggregate_awareness {
          enabled: true
          debug_comments: true
        }
      }
    }
  }
  block t1: TextBlock {
    content: @md # Multi-Value Gauge Chart
---
A Multi-Value Gauge Chart effectively visualizes multiple measures in relation to a target value within a single gauge.
Key Inputs:
* **Green Measure:** Represents a positive or favorable metric.
* **Red Measure:** Represents an unfavorable or critical metric.
* â€‹**Target Measure:** Sets a goal or benchmark for comparison.
* **Max Value Measure:** Sets the upper limit of the gauge's scale.;;
  }
  block t2: TextBlock {
    content: @md ðŸ‘‡ Use the template below to create this chart using [Custom Charts](https://docs.holistics.io/docs/charts/custom-charts).

```
CustomChart {
  fields {
    field m1 {
      type: "measure"
      label: "Value 1"
    }
    field m2 {
      type: "measure"
      label: "Value 2"
    }
    field target {
      type: "measure"
      label: "Target"
    }
    field max {
      type: "measure"
      label: "Max Value"
    }
  }
  options {
    option m1_color {
      type: "color-picker"
      default_value: "green"
      label: "Value 1 Color"
    }
    option m2_color {
      type: "color-picker"
      default_value: "red"
      label: "Value 2 Color"
    }
    option target_color {
      type: "color-picker"
      default_value: "black"
      label: "Target Color"
    }
    option max_color {
      type: "color-picker"
      default_value: "grey"
      label: "Max Value Color"
    }
  }

  template: @vgl {
    "data": {"values": @{values}},
    "transform": [
      {"calculate": "datum['@{fields.m1.name}']", "as": "m1" },
      {"calculate": "datum['@{fields.m2.name}']", "as": "m2" },
      {"calculate": "datum['@{fields.target.name}']", "as": "target" },
      {"calculate": "datum['@{fields.max.name}']", "as": "max" },
      
      {"calculate": "datum.m1 / datum.max", "as": "m1_percentage"},
      {"calculate": "datum.m2 / datum.max", "as": "m2_percentage"},
      {"calculate": "datum.target / datum.max", "as": "target_percentage"},

      {"calculate": "360 - ( 180 / 2 )", "as": "_arc_start_degrees"},
      {"calculate": "0 + ( 180 / 2 )", "as": "_arc_end_degrees"},

      {"calculate": "2 * PI * ( datum['_arc_start_degrees'] - 360 ) / 360", "as": "_arc_start_radians"},
      {"calculate": "2 * PI * datum['_arc_end_degrees'] / 360", "as": "_arc_end_radians"},
      {"calculate": "datum['_arc_end_radians'] - datum['_arc_start_radians']", "as": "_arc_total_radians"},
      {"calculate": "datum['_arc_start_radians']", "as": "_ring_start_radians"},
      {"calculate": "datum['_arc_start_radians'] + ( datum['_arc_total_radians'] * datum.m1_percentage )", "as": "m1_ring_end_radians"},
      {"calculate": "datum['_arc_start_radians'] + ( datum['_arc_total_radians'] * datum.m2_percentage )", "as": "m2_ring_end_radians"},

      {"calculate": "datum['_arc_start_radians'] + ( datum['_arc_total_radians'] * datum.target_percentage )", "as": "target_ring_start_radians"},
      {"calculate": "datum['_arc_start_radians'] + ( datum['_arc_total_radians'] * datum.target_percentage ) + (1 * (PI/180))", "as": "target_ring_end_radians"}
    ],
    "params": [
      {"name": "ring_max", "value": 160},
      {"name": "ring_width", "value": 30},
      {"name": "ring_gap", "value": 30},
      {"name": "max_color", "value": @{options.max_color.value}},
      {"name": "m1_color", "value": @{options.m1_color.value}},
      {"name": "m2_color", "value": @{options.m2_color.value}},
      {"name": "target_color", "value": @{options.target_color.value}},
      {"name": "ring0_percent", "value": 100},
      {"name": "ring0_outer", "expr": "ring_max+2"},
      {"name": "ring0_inner", "expr": "ring_max+1"},
      {"name": "ring1_outer", "expr": "ring0_inner-ring_gap"},
      {"name": "ring1_inner", "expr": "ring1_outer-ring_width"},
      {"name": "ring1_middle", "expr": "(ring1_outer+ring1_inner)/2"}
    ],
    "encoding": {
      "tooltip": [
        {
          "field": @{fields.m1.name},
          "format": @{fields.m1.format},
          "formatType": "holisticsFormat",
        },
        {
          "field": @{fields.m2.name},
          "format": @{fields.m2.format},
          "formatType": "holisticsFormat"
        },
        {
          "field": @{fields.target.name},
          "format": @{fields.target.format},
          "formatType": "holisticsFormat"
        },
        {
          "field": @{fields.max.name},
          "format": @{fields.max.format},
          "formatType": "holisticsFormat"
        }
      ]
    },
    "layer": [
      {
        "name": "MAX RING",
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum['_arc_start_radians']"},
          "theta2": {"expr": "datum['_arc_end_radians']"},
          "yOffset": {"expr": "ring_max-ring_width-ring_gap-20"}
        },
        "encoding": {
          "color": {
            "value": {
              "expr": "max_color"
            }
          }
        }
      },
      {
        "name": "M2 RING",
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum['_ring_start_radians']"},
          "theta2": {"expr": "datum['m2_ring_end_radians']"},
          "yOffset": {"expr": "ring_max-ring_width-ring_gap-20"}
        },
        "encoding": {
          "color": {
            "value": {
              "expr": "m2_color"
            }
          }
        }
      },
      {
        "name": "M1 RING",
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum['_ring_start_radians']"},
          "theta2": {"expr": "datum['m1_ring_end_radians']"},
          "yOffset": {"expr": "ring_max-ring_width-ring_gap-20"}
        },
        "encoding": {
          "color": {
            "value": {
              "expr": "m1_color"
            }
          }
        }
      },
      {
        "name": "TARGET",
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer+3"},
          "radius2": {"expr": "ring1_inner-3"},
          "theta": {"expr": "datum['target_ring_start_radians']"},
          "theta2": {"expr": "datum['target_ring_end_radians']"},
          "yOffset": {"expr": "ring_max-ring_width-ring_gap-20"}
        },
        "encoding": {
          "color": {
            "value": {
              "expr": "target_color"
            }
          }
        }
      },
      {
        "name": "VALUE",
        "mark": {
          "type": "text",
          "fontSize": 48,
          "font": "Inter",
          "fontWeight": 500,
          "yOffset": {"expr": "ring_max-ring_width-ring_gap-35"}
        },
        "encoding": {
          "text": {
            "field": "m1_percentage",
            "type": "quantitative",
            "format": ".02%"
          },
          "color": {
            "value": {
              "expr": "m1_color"
            }
          }
        }
      }
    ]
  }\;\;
}
```;;
  }
}