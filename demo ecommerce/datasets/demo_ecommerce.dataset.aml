Dataset demo_ecommerce {
   __engine__: 'aql' //turn this Dataset to using AQL Engine
  label: '[Demo] Ecommerce (Official)'
  description: "Official dataset for demoing E-commerce use cases test"
  owner: 'ha.pham+demo4@holistics.io'
  data_source_name: 'demodb'

  models: [
    order_master,
    ecommerce_orders,
    ecommerce_users,
    ecommerce_products,
    ecommerce_merchants,
    ecommerce_cities,
    ecommerce_countries,
    map_categories,
    user_cohort_retention,
    dim_dates,
    transform_order_items
    ,
    ecommerce_product_images
  ]
  


  // view: Arranging view in dataset for business users

  view {
    model ecommerce_users {

      group ID {
        field id
        field city_id
      }

      group demographics {
        field age_group
        field age
        field gender
      }

      group PII {
        field first_name
        field last_name
        field email
        field full_name
        field email_pii
      }

      group activity {
        field sign_up_at
        field sign_up_date
      }

      group metrics {
        field total_users
        field users_signed_up_count
      }

    }

    model ecommerce_orders {
      field total_orders_count
      field created_at
      field discount
      field status
      field days_since_last_order
      field cumm_orders

      group order_status_tracking {
        field created_date
        field delivered_orders_count
        field cancelled_orders_count
        field refunded_orders_count
        field order_month
      }
      group others {
        field delivery_attempts
        field id
      }
    }

    model order_master
    model ecommerce_products
    model ecommerce_merchants
    model ecommerce_cities
    model ecommerce_countries
    model map_categories
    model user_cohort_retention
    model dim_dates
  }

  relationships: [
    relationship(ecommerce_orders_dim_dates, true),
    relationship(ecommerce_orders_ecommerce_users, true),
    relationship(ecommerce_products_map_categories, true),
    relationship(ecommerce_users_ecommerce_cities, true),
    relationship(order_master_ecommerce_merchants, true),
    relationship(order_master_ecommerce_orders, true),
    relationship(order_master_ecommerce_products, true)
    ,
    relationship(ecommerce_products.id - ecommerce_product_images.product_id, true)
    ,
    relationship(ecommerce_cities.country_code > ecommerce_countries.code, true)
  ]

  // Metric
  metric revenue {
    label: 'Revenue'
    type: 'number'
    definition: @aql ecommerce_order_items | sum(ecommerce_order_items.quantity * ecommerce_products.price);;
  }
}