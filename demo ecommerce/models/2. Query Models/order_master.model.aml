Model order_master {
  type: 'query'
  label: 'Order Master'
  description: 'Derived model to report all Ecommerce metrics'
  owner: 'vincent+demo4@holistics.io'
  data_source_name: 'demodb'

  persistence: FullPersistence {
    schema: 'persisted' // persisted table will be written into this schema
    // view_name: 'order_master' //Optional
    custom_ddl: @sql 	
      CREATE TABLE {{ persisted_table }}
      AS {{ parsed_query }};

      CREATE INDEX {{ index_name }} ON {{ persisted_table }} (order_created_at);
      CREATE INDEX {{ index_name }} ON {{ persisted_table }} ((order_created_at::date));
      CREATE INDEX {{ index_name }} ON {{ persisted_table }} (user_id);
      CREATE INDEX {{ index_name }} ON {{ persisted_table }} (status);
      CREATE INDEX {{ index_name }} ON {{ persisted_table }} (product_id);
      CREATE INDEX {{ index_name }} ON {{ persisted_table }} (merchant_id);
      CREATE INDEX {{ index_name }} ON {{ persisted_table }} (order_id, product_id);
      ;;
  }

  models: [
    ecommerce_orders,
    ecommerce_order_items,
    ecommerce_products
  ]


  query: @sql                
  select 
    {{#o.id}} as order_id
    , {{#o.user_id}}
    , {{#o.status }}
    , {{#o.created_at}} as order_created_at
    , {{#o.delivery_attempts}}
    , {{#o.discount}}
    , {{#oi.quantity}}
    , {{#oi.product_id}}
    , {{#p.price}}
    , {{#p.merchant_id}}
    , {{ #oi.order_id }} as test_broken
  from {{ #ecommerce_order_items AS oi }} 
  left join {{ #ecommerce_orders AS o }} on {{#oi.order_id}} = {{#o.id}}
  left join {{ #ecommerce_products AS p }} on {{#oi.product_id}} = {{#p.id}}
  ;;

  dimension order_id {
    label: "Order Id"
    type: "number"
    description: "Unique identifier for the order."
    hidden: false
    definition: @sql {{ #SOURCE.order_id }};;
  }
  dimension user_id {
    label: 'User Id'
    type: 'number'
    description: "Unique identifier for the customer who placed the order."
    hidden: false
    definition: @sql {{ #SOURCE.user_id }};;
  }

  dimension status {
    label: 'Status'
    type: 'text'
    description: "Current status of the order (e.g., delivered, cancelled, refunded)."
    hidden: false
    definition: @sql {{ #SOURCE.status }};;
  }
  dimension order_created_at {
    label: 'Order Created At'
    type: 'datetime'
    description: "Timestamp indicating when the order was created."
    hidden: false
    definition: @sql {{ #SOURCE.order_created_at }};;
  }

  dimension date_html {
    label: "Date Html"
    type: "text"
    description: "HTML-rendered order date (used for styled dashboards or custom formatting)."
    hidden: false
    definition: @sql CONCAT('<p style="background-color:tomato;">',{{ order_created_at }}, '</p>');;
  }

  dimension delivery_attempts {
    label: 'Delivery Attempts'
    type: 'number'
    description: "Number of attempts made to deliver the order."
    hidden: false
    definition: @sql {{ #SOURCE.delivery_attempts }};;
  }
  dimension discount {
    label: 'Discount'
    type: 'number'
    description: "Discount applied to the item, represented as a decimal (e.g., 0.1 for 10%)."
    hidden: false
    definition: @sql {{ #SOURCE.discount }};;
  }
  dimension quantity {
    label: 'Quantity'
    type: 'number'
    description: "Number of units of the product in this order item."
    hidden: false
    definition: @sql {{ #SOURCE.quantity }};;
  }
  dimension product_id {
    label: 'Product Id'
    type: 'number'
    description: "Unique identifier for the product."
    hidden: false
    definition: @sql {{ #SOURCE.product_id }};;
  }
  dimension price {
    label: 'Price'
    type: 'number'
    description: "Unit price of the product before discount."
    hidden: false
    definition: @sql {{ #SOURCE.price }};;
  }
  dimension merchant_id {
    label: 'Merchant Id'
    type: 'number'
    description: "Unique identifier for the merchant or seller."
    hidden: false
    definition: @sql {{ #SOURCE.merchant_id }};;
  }
  dimension test_broken {
    label: 'Test Broken'
    type: 'number'
    description: "Duplicate field for testing/debugging."
    hidden: true
    definition: @sql {{ #SOURCE.test_broken }};;
  }

  // Custom dimensions
  dimension order_created_date {
    label: 'Order Created Date'
    type: 'date'
    description: "Date portion (YYYY-MM-DD) of when the order was created."
    hidden: true
    definition: @sql {{ #SOURCE.order_created_at }}::date;;
  }
  dimension order_created_month {
    label: 'Order Created Month'
    type: 'date'
    description: "Month of the order creation, truncated to the first day of the month."
    hidden: true
    definition: @sql date_trunc('month', {{ #SOURCE.order_created_at }}::date);;
  }
  dimension last_month {
    label: 'Last Month'
    type: 'date'
    description: "The month before the order_created_month â€” useful for period-over-period comparisons."
    hidden: true
    definition: @sql date_trunc('month', {{ #SOURCE.order_created_at }}::date) - interval '1 month';;
  }
  dimension final_item_value {
    label: 'Final Item Value'
    type: 'number'
    description: "Final value per item after applying the discount (price * (1 - discount))."
    hidden: true
    definition: @sql {{ #SOURCE.price }} * (1 - {{ #SOURCE.discount }}) ;;
  }
  dimension order_is_delivered {
    label: 'Order Is Delivered'
    type: 'truefalse'
    description: "Boolean flag indicating whether the order was delivered."
    hidden: false
    definition: @sql {{#SOURCE.status}} = 'delivered';;
  }
  dimension date_and_merchant_id {
    label: 'Date And Merchant ID'
    type: 'text'
    description: 'This field is for data teams to use as a key that consists of date and merchant ids concatenated.'
    hidden: true
    definition: @sql concat ({{ #SOURCE.order_created_at }}::date,'_',{{ #SOURCE.merchant_id }});;
  }
  dimension last_order_value {
    label: 'Last Order Value'
    type: 'number'
    description: 'Estimated value after applying discount (price - discount).'
    hidden: false
    definition: @sql {{ #SOURCE.price }} - {{ #SOURCE.discount }};;
  }
  dimension quantity_threshold {
    label: 'Quantity Threshold'
    type: 'text'
    description: 'Text-based flag showing if quantity is above, at, or below the 30-unit threshold.'
    hidden: true
    definition: @sql CASE
    WHEN {{ #SOURCE.quantity }} > 30 then 'The quantity is greater than 30'
    WHEN {{ #SOURCE.quantity }} = 30 then 'The quantity is 30'
    ELSE 'The quantity is under 30'
END;;
  }
  dimension amount {
    label: "Amount"
    type: "number"
    description: "Calculated revenue per line item (quantity * price * (1 - discount))."
    hidden: false
    definition: @sql {{ quantity }} * {{ price }} * (1 - {{ discount }});;
    format: "[\$\$]#,###"
  }

  // Custom measures
  measure order_count {
    label: "Order Count"
    type: "number"
    description: "Total number of unique orders."
    hidden: false
    definition: @sql count(distinct {{ #SOURCE.order_id }});;
    aggregation_type: "custom"
  }
  measure aov {
    label: "AOV - Average Order Value"
    type: "number"
    description: "AOV - Average Order Value: Average value per order (total price / number of orders)."
    hidden: false
    definition: @sql sum({{ #SOURCE.price }}) / count(distinct {{ #SOURCE.order_id }});;
    aggregation_type: "custom"
    format: "[\$\$]#,###0.00"
  }

  measure cancel_value_ratio {
    label: "Cancel Value Ratio"
    type: "number"
    description: "Ratio of cancelled order value to total order value."
    hidden: false
    definition: @sql sum(case when {{ #SOURCE.status }} = 'cancelled' then {{ #SOURCE.price }} else 0 end)::float / sum({{ #SOURCE.price }})::float;;
    aggregation_type: "custom"
    format: "#,###0.00"
  }
  measure cancelled_order_ratio {
    label: "Cancelled Order Ratio"
    type: "number"
    description: "Percentage of orders that were cancelled - Total number of cancelled orders/Total numbers of orders"
    hidden: false
    definition: @sql count(distinct case when {{ #SOURCE.status }} = 'cancelled'
              then {{ #SOURCE.order_id }} else null end)::float / 
  count(distinct {{ #SOURCE.order_id }})::float ;;
    aggregation_type: "custom"
    format: FullNumberFormat {
      pattern: "#,###0.00"
      groupSeparator: "."
      decimalSeparator: ","
    }
  }
  measure cancelled_orders_count {
    label: "Cancelled Orders Count"
    type: "number"
    definition: @sql count(distinct case when {{ #SOURCE.status }} = 'cancelled'
         then {{ #SOURCE.order_id }} else null end);;
    description: "Total number of cancelled orders"
    format: "#,###0.00"
  }
  measure cancelled_value {
    label: "Cancelled Value"
    type: "number"
    definition: @sql sum(case when {{ #SOURCE.status }} = 'cancelled' then {{ #SOURCE.price }} else 0 end)::float;;
    description: "Total values of orders cancelled"
    format: "[$$]#,###0"
  }
  measure completed_order_count {
    label: "Completed Order Count"
    type: "number"
    description: 'Number of completed orders (all statuses except \"cancelled\").'
    hidden: false
    definition: @sql count(distinct case when {{ #SOURCE.status }} <> 'cancelled' then {{ #SOURCE.order_id }} else null end);;
    aggregation_type: "custom"
  }
  measure count_distinct_users {
    label: "Count Distinct Users"
    type: "number"
    description: "Number of unique users who placed orders."
    hidden: false
    definition: @sql count(distinct {{ #SOURCE.user_id }});;
    aggregation_type: "custom"
  }
  measure delivered_orders_count {
    label: "Delivered Orders Count"
    type: "number"
    description: "Total number of orders marked as \"delivered\"."
    hidden: false
    definition: @sql count(distinct case when {{ #SOURCE.status }} = 'delivered' then {{ #SOURCE.order_id }} else null end);;
    aggregation_type: "custom"
  }
  measure gmv {
    label: "GMV - Gross Merchandise Value"
    type: "number"
    description: "GMV - Gross Merchandise Value: Total value of all orders, regardless of status."
    hidden: false
    definition: @sql sum({{ #SOURCE.price }});;
    aggregation_type: "custom"
    format: "[\$\$]#,###0"
  }

  measure nmv {
    label: "NMV - Net Merchandise Value"
    type: "number"
    description: "NMV - Net Merchandise Value: Total value of all non-cancelled and non-refunded orders."
    hidden: false
    definition: @sql sum(case when {{ #SOURCE.status }} in ('cancelled', 'refunded') then 0 else {{ #SOURCE.price }} end);;
    aggregation_type: "custom"
    format: "[\$\$]#,###0"
  }
  measure refunded_orders_count {
    label: "Refunded Orders Count"
    type: "number"
    description: "Number of orders that were refunded."
    hidden: false
    definition: @sql count(distinct case when {{ #SOURCE.status }} = 'refunded' then {{ #SOURCE.order_id }} else null end);;
    aggregation_type: "custom"
  }
  measure revenue {
    label: "Revenue"
    type: "number"
    description: "Total revenue generated (price * quantity)."
    hidden: false
    definition: @sql sum({{ #SOURCE.price }}*{{ #SOURCE.quantity }});;
    aggregation_type: "custom"
    format: "[\$\$]#,###0"
  }
  measure revenue_delivered {
    label: "Revenue Delivered"
    type: "number"
    definition: @sql sum(case when {{ #SOURCE.status }} = 'delivered' then {{ #SOURCE.price }} else 0 end);;
    description: "Revenue of delivered items only"
    format: "[$$]#,###0"
  }
  measure users_count {
    label: "Users Count"
    type: "number"
    description: "Total number of unique users who placed orders (same as count_distinct_users)."
    hidden: false
    definition: @sql count(distinct {{ #SOURCE.user_id }});;
    aggregation_type: "custom"
  }

  // Parameter to allow users to choose which dimension to use dynamically
  param dim_selector {
    label: 'Dimension Selector'
    type: 'text'
    allowed_values: [
      'Countries',
      'Cities',
      'Gender'
    ]
  }
}