Model parch_posey_orders {
  type: 'table'
  label: 'Orders'
  description: ''
  data_source_name: 'demodb'
  dimension id {
    label: 'Id'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.id }};;
  }
  dimension account_id {
    label: 'Account Id'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.account_id }};;
  }
  dimension occurred_at {
    label: 'Occurred At'
    type: 'datetime'
    hidden: false
    definition: @sql {{ #SOURCE.occurred_at }};;
  }
  dimension standard_qty {
    label: 'Standard Qty'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.standard_qty }};;
  }
  dimension gloss_qty {
    label: 'Gloss Qty'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.gloss_qty }};;
  }
  dimension poster_qty {
    label: 'Poster Qty'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.poster_qty }};;
  }
  dimension total {
    label: 'Total'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.total }};;
  }
  dimension standard_amt_usd {
    label: 'Standard Amt Usd'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.standard_amt_usd }};;
  }
  dimension gloss_amt_usd {
    label: 'Gloss Amt Usd'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.gloss_amt_usd }};;
  }
  dimension poster_amt_usd {
    label: 'Poster Amt Usd'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.poster_amt_usd }};;
  }
  dimension total_amt_usd {
    label: 'Total Amt Usd'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.total_amt_usd }};;
  }
  dimension day_occurred {
    label: "Day Occurred"
    type: "date"
    definition: @sql To_Char(date({{ occurred_at }}), 'DAY');;
    format: "LLL dd yyyy"
  }
  measure test_sd {
    label: "Test Sd"
    type: "number"
    definition: @aql safe_divide(sum(parch_posey_orders.standard_qty)+sum(parch_posey_orders.gloss_qty),sum(parch_posey_orders.poster_qty));;
  }

  owner: 'chukwudi+demo4@holistics.io'
  table_name: '"parch_posey"."orders"'
  measure quartile {
    label: "Quartile"
    type: "number"
    definition: @sql   FLOOR(
(SUM(CASE WHEN {{ total_amt_usd }} < {{ total_amt_usd }} THEN 1 ELSE 0 END))/(COUNT(*))*4) + 1;;
    aggregation_type: "custom"
  }
  measure percentile {
    label: "Percentile"
    type: "number"
    definition: @sql ntile(100) over (order by {{ total_amt_usd }});;
    aggregation_type: "custom"
  }
}
