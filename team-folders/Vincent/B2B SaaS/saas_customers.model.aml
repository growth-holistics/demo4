Model saas_customers {
  type: 'query'
  label: 'Saas Customers'
  description: ''
  data_source_name: 'demodb'
  dimension id {
    label: 'Id'
    type: 'number'
    hidden: false
    definition: @sql {{ #SOURCE.id }};;
  }
  dimension company_name {
    label: 'Company Name'
    type: 'text'
    hidden: false
    definition: @sql {{ #SOURCE.company_name }};;
  }
  dimension industry {
    label: 'Industry'
    type: 'text'
    hidden: false
    definition: @sql {{ #SOURCE.industry }};;
  }
  dimension region {
    label: 'Region'
    type: 'text'
    hidden: false
    definition: @sql {{ #SOURCE.region }};;
  }
  dimension created_at {
    label: 'Created At'
    type: 'datetime'
    hidden: false
    definition: @sql {{ #SOURCE.created_at }};;
  }
  dimension updated_at {
    label: 'Updated At'
    type: 'datetime'
    hidden: false
    definition: @sql {{ #SOURCE.updated_at }};;
  }

  owner: 'vincent@holistics.io'
  query: @sql  WITH company_names AS (
    SELECT DISTINCT 
        chr(trunc(65 + random() * 25)::int) || 
        chr(trunc(65 + random() * 25)::int) || 
        chr(trunc(65 + random() * 25)::int) || 
        chr(trunc(65 + random() * 25)::int) ||
        chr(trunc(65 + random() * 25)::int) ||
        lpad(trunc(random() * 999)::text, 3, '0') AS company_name
    FROM generate_series(1, 5000)  -- Generate more to ensure uniqueness
    LIMIT 4000
),
industries AS (
    SELECT 'Technology' AS industry UNION ALL
    SELECT 'Finance' UNION ALL
    SELECT 'Healthcare' UNION ALL
    SELECT 'Manufacturing' UNION ALL
    SELECT 'Retail' UNION ALL
    SELECT 'Education' UNION ALL
    SELECT 'Media' UNION ALL
    SELECT 'Government'
),
regions AS (
    SELECT 'North America' AS region UNION ALL
    SELECT 'Europe' UNION ALL
    SELECT 'Asia Pacific' UNION ALL
    SELECT 'Latin America' UNION ALL
    SELECT 'Middle East' UNION ALL
    SELECT 'Africa'
),
randomized AS (
    SELECT c.company_name,
           (ARRAY(SELECT industry FROM industries ORDER BY random()))[1] AS industry,
           (ARRAY(SELECT region FROM regions ORDER BY random()))[1] AS region,
           row_number() OVER (ORDER BY random()) AS rn
    FROM company_names c
    LIMIT 4000
)
SELECT rn AS id,
       company_name,
       industry,
       region,
       date_trunc('minute', CURRENT_DATE - (rn * interval '1 minute') - ((random() * (40 * 30 * 24 * 60))::text || ' minutes')::interval) AS created_at
FROM randomized
ORDER BY created_at;;;
  models: [
  ]
}
